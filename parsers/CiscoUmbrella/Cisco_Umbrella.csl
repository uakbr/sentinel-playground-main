// Usage Instruction : 
// Paste below query in log analytics, click on Save button and select as Function from drop down by specifying function name and alias as Cisco_Umbrella.
// Function usually takes 10-15 minutes to activate. You can then use function alias from any other queries (e.g. Cisco_Umbrella | take 10).
// Reference : Using functions in Azure monitor log queries : https://docs.microsoft.com/azure/azure-monitor/log-query/functions

SecureHats_CL
| where LogSourceType startswith "Cisco_Umbrella_" // Filter for Umbrella logs ingested by the updated script
| extend RawDataObject = todynamic(RawData) // Parse the JSON string in RawData
| extend
    // Common fields (attempt to extract, might be null depending on type)
    EventEndTime = unixtime_milliseconds_todatetime(tolong(RawDataObject.Timestamp_t)), // Assuming Timestamp_t is epoch milliseconds
    EventType = tostring(RawDataObject.EventType_s),
    Identities = tostring(RawDataObject.Identities_s),
    IdentityType = tostring(RawDataObject.Identity_Type_s),
    SrcIpAddr = coalesce(tostring(RawDataObject.InternalIp_s), tostring(RawDataObject.Internal_IP_s), tostring(RawDataObject.Source_IP_s), tostring(RawDataObject.SourceIP)),
    SrcNatIpAddr = coalesce(tostring(RawDataObject.ExternalIp_s), tostring(RawDataObject.External_IP_s)),
    DstIpAddr = coalesce(tostring(RawDataObject.Destination_IP_s), tostring(RawDataObject.destinationIp_s)),
    DstPortNumber = coalesce(tostring(RawDataObject.Destination_Port_s), tostring(RawDataObject.destinationPort_s)),
    SrcPortNumber = tostring(RawDataObject.Source_Port_s), // Only in IP logs?
    UrlCategory = tostring(RawDataObject.Categories_s),
    ThreatCategory = tostring(RawDataObject.Blocked_Categories_s),
    DvcAction = coalesce(tostring(RawDataObject.Action_s), tostring(RawDataObject.Verdict_s), tostring(RawDataObject.verdict_s)),

    // DNS specific
    DnsQueryName = tostring(RawDataObject.Domain_s),
    DnsQueryTypeName = tostring(RawDataObject.QueryType_s),
    DnsResponseCodeName = tostring(RawDataObject.ResponseCode_s),
    PolicyIdentity = tostring(RawDataObject.Policy_Identity_s),
    PolicyIdentityType = tostring(RawDataObject.Policy_Identity_Type_s),

    // Proxy specific
    HttpContentType = tostring(RawDataObject.Content_Type_s),
    UrlOriginal = tostring(RawDataObject.URL_s),
    HttpReferrerOriginal = tostring(RawDataObject.Referer_s),
    HttpUserAgentOriginal = tostring(RawDataObject.userAgent_s),
    HttpStatusCode = tostring(RawDataObject.statusCode_s),
    SrcBytes = RawDataObject.requestSize_d,
    DstBytes = RawDataObject.responseSize_d,
    HttpResponseBodyBytes = RawDataObject.responseBodySize_d,
    HashSha256 = tostring(RawDataObject.['SHA-SHA256_s']),
    AvDetections = tostring(RawDataObject.AVDetections_s),
    Puas = tostring(RawDataObject.PUAs_s),
    AmpDisposition = tostring(RawDataObject.AMP_Disposition_s),
    ThreatName = tostring(RawDataObject.AMP_Malware_Name_s),
    AmpScore = RawDataObject.AMP_Score_s,

    // Cloud Firewall specific
    NetworkSessionId = tostring(RawDataObject.originId_s),
    NetworkRuleName = tostring(RawDataObject.Identity_s), // Re-using Identity_s based on old parser
    NetworkDirection = tostring(RawDataObject.Direction_s),
    NetworkProtocol = tostring(RawDataObject.ipProtocol_s),
    NetworkPackets = tostring(RawDataObject.packetSize_s),
    DvcHostname = tostring(RawDataObject.dataCenter_s),
    NetworkRuleNumber = tostring(RawDataObject.ruleId_s)

| project
    // Base fields
    TimeGenerated, // Original ingestion time
    LogSourceType, // Added by ingestion script
    EventEndTime, // Parsed timestamp from log
    EventType,
    Identities,
    IdentityType,
    SrcIpAddr,
    SrcNatIpAddr,
    DstIpAddr,
    DstPortNumber,
    SrcPortNumber, 
    UrlCategory,
    ThreatCategory,
    DvcAction,

    // DNS
    DnsQueryName,
    DnsQueryTypeName,
    DnsResponseCodeName,
    PolicyIdentity,
    PolicyIdentityType,

    // Proxy
    HttpContentType,
    UrlOriginal,
    HttpReferrerOriginal,
    HttpUserAgentOriginal,
    HttpStatusCode,
    SrcBytes,
    DstBytes,
    HttpResponseBodyBytes,
    HashSha256,
    AvDetections,
    Puas,
    AmpDisposition,
    ThreatName,
    AmpScore,

    // Firewall
    NetworkSessionId,
    NetworkRuleName,
    NetworkDirection,
    NetworkProtocol,
    NetworkPackets,
    DvcHostname,
    NetworkRuleNumber,
    
    // Keep RawData for debugging if needed
    RawData
