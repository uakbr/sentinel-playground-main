// Title:           Qualys KnowledgeBase (KB) Parser
// Author:          Microsoft
// Version:         1.1 (Modernized)
// Last Updated:    YYYY-MM-DD
// Comment:         Updated to parse from SecureHats_CL table with LogSourceType field.
//  
// DESCRIPTION:
// This parser takes Qualys KB records ingested via the updated data ingestion script (which adds LogSourceType)
// from the SecureHats_CL table and parses the data into a normalized schema.
//
// USAGE:
// This function is deployed via ARM script. You can use the alias QualysKB in your queries.
// Example: QualysKB | take 10
//
// REFERENCES: 
// Using functions in Azure monitor log queries: https://docs.microsoft.com/azure/azure-monitor/log-query/functions
//
SecureHats_CL
| where LogSourceType == "QualysKB_CL"
| extend RawDataObject = todynamic(RawData)
| project 
    // Original ingestion metadata
    SourceSystem, 
    TimeGenerated, 
    TenantId, 
    MG, 
    ManagementGroupName, 
    Computer, 
    _ResourceId,
    // Parsed fields from RawData
    Qid = RawDataObject.QID_s,
    Title = RawDataObject.Title_s,
    Category = RawDataObject.Category,
    Consquence = RawDataObject.Consequence_s,
    Diagnosis = RawDataObject.Diagnosis_s,
    LastServiceModificationDateTime = RawDataObject.["Last_Service_Modification_DateTime_t "], // Note space in original name
    Patchable = RawDataObject.Patchable_s,
    CveId = RawDataObject.CVE_ID_s,
    CveUrl = RawDataObject.CVE_URL_s,
    VendorReferenceId = RawDataObject.Vendor_Reference_ID_s,
    VendorReferenceUrl = RawDataObject.Vendor_Reference_URL_s,
    PciFlag = RawDataObject.PCI_Flag_s,
    PublishedDateTime = RawDataObject.["Published_DateTime_t "], // Note space in original name
    Severity = RawDataObject.Severity_Level_s,
    SoftwareProduct = RawDataObject.Software_Product_s,
    SoftwareVendor = RawDataObject.Software_Vendor_s,
    Solution = RawDataObject.Solution_s,
    VulnType = RawDataObject.Vuln_Type_s,
    DiscoveryAdditionalInfo = RawDataObject.Discovery_Additional_Info_s,
    DiscoveryRemote = RawDataObject.Discovery_Remote_s,
    DiscoverAuthType = RawDataObject.Discovery_Auth_Type_s,
    // Keep RawData for reference
    RawData
